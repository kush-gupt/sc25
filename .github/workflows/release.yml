name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "VERSION=${{ inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Slurm MCP
        uses: docker/build-push-action@v5
        with:
          context: mcp-servers/slurm
          file: mcp-servers/slurm/Containerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/slurm-mcp-server:${{ steps.version.outputs.VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/slurm-mcp-server:latest
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Flux MCP
        uses: docker/build-push-action@v5
        with:
          context: mcp-servers/flux
          file: mcp-servers/flux/Containerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/flux-mcp-server:${{ steps.version.outputs.VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/flux-mcp-server:latest
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Workload
        uses: docker/build-push-action@v5
        with:
          context: workloads
          file: workloads/Containerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/sc25-workload:${{ steps.version.outputs.VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/sc25-workload:latest
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate release notes
        run: |
          cat > release-notes.md <<EOF
          # Release ${{ steps.version.outputs.VERSION }}
          
          ## Container Images
          
          - \`ghcr.io/${{ env.IMAGE_PREFIX }}/slurm-mcp-server:${{ steps.version.outputs.VERSION }}\`
          - \`ghcr.io/${{ env.IMAGE_PREFIX }}/flux-mcp-server:${{ steps.version.outputs.VERSION }}\`
          - \`ghcr.io/${{ env.IMAGE_PREFIX }}/sc25-workload:${{ steps.version.outputs.VERSION }}\`
          
          ## What's Changed
          
          EOF
          
          PREVIOUS_TAG=\$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "\$PREVIOUS_TAG" ]; then
            git log \${PREVIOUS_TAG}..HEAD --oneline --pretty=format:"- %s (%h)" >> release-notes.md
          else
            echo "Initial release" >> release-notes.md
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: Release ${{ steps.version.outputs.VERSION }}
          body_path: release-notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
